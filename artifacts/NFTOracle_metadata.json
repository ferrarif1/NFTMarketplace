{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "ID",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_hash",
						"type": "string"
					}
				],
				"name": "checkNFTByHash",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_ID",
						"type": "uint256"
					}
				],
				"name": "checkNFTByID",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_ID",
						"type": "uint256"
					}
				],
				"name": "checkNFTByIDDetail",
				"outputs": [
					{
						"components": [
							{
								"internalType": "enum NFTOracle.NFTState",
								"name": "state",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "hash",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "IPFS",
								"type": "string"
							},
							{
								"internalType": "bool",
								"name": "isDetected",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "result",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "uploader",
								"type": "address"
							}
						],
						"internalType": "struct NFTOracle.NFT",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_ID",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_result",
						"type": "bool"
					}
				],
				"name": "detectNFT",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_hash",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_ipfs",
						"type": "string"
					}
				],
				"name": "uploadNFT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"oracle_flat.sol": "NFTOracle"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"oracle_flat.sol": {
			"keccak256": "0x8511cd18082822fb215bc010529831dcfbaa1953070104a67b363157f55b2543",
			"urls": [
				"bzz-raw://34a67b71990cbcdc6c87ed0e2f7da732f9ba62830442fdd74bc8000d8a8e96ff",
				"dweb:/ipfs/QmXr37ReCzTzuq3coSA7qqhy96AxT9DaDP72EzpfKHmfmy"
			]
		}
	},
	"version": 1
}